version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: "api"
    volumes:
      - ./api:/app
    ports:
      - 8000:8000
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"  # Use service name
    networks:
      - kafka-net

  producer:
    image: python:3.9-slim  # Python base image
    volumes:
      - ./kafka:/app  # Mount your producer code
    working_dir: /app
    command: python producer.py  # Now Python exists!
    depends_on:
      - kafka

  consumer:
    image: python:3.9-slim  # Same for consumer
    volumes:
      - ./kafka:/app
    working_dir: /app
    command: python consumer.py
    depends_on:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"  # Enables KRaft mode.
      KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both controller and broker.
      KAFKA_NODE_ID: 1  # Unique ID for the Kafka instance.
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Controller quorum.
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Log storage location.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Enables automatic topic creation.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Single replica for simplicity.
      KAFKA_LOG_RETENTION_HOURS: 168  # Log retention period (7 days).
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No rebalance delay.
      CLUSTER_ID: "5L6g3nShT-eMCtK--X86sw"  # Unique Kafka cluster ID.
    volumes:
      - kafka_data:/var/lib/kafka/data  # Let Docker manage permissions

volumes:
  kafka_data:  # No host permission conflicts
networks:
  kafka-net:
    driver: bridge